{"version":3,"file":"static/webpack/static/development/pages/teamboard.js.c7a1f3ae391c3027b2a7.hot-update.js","sources":["webpack:///./Components/TeamBoard.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport ScoreBoardAnimate from '../assets/scoreBoardAnimate.js';\nimport TeamGroup from '../assets/TeamBoardStyle';\n\nconst ScoreBoard = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 50% 50%;\n\tgrid-template-rows: repeat(5, auto);\n  font-family: sans-serif;\n\n  .Players{\n    width: 100%;\n    display: block;\n    margin: 0 auto;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    text-align: center;\n\n    .editMode{\n      margin-top: -1px;\n      height: calc( 100vh - 90px);\n      width: 100vw;\n      background-color: #2c3965;\n      color: white;\n    }\n\n    .Player1{\n      font-size: 20px;\n      display: grid;\n      grid-template-columns: 50% 50%;\n      align-self: center;\n      align-items: center;\n      text-align: center;\n      grid-column-start: 1;\n      grid-column-end: 3;\n\n      input{\n        margin-left: 10px;\n      }\n      .viewMode{\n        height: 5px;\n        z-index: -10;\n      }\n    }\n    button{\n      grid-column-start: 1;\n      grid-column-end: 3;\n      width: 150px; \n      height: 30px;\n      margin: 40px auto 0 auto;\n    }\n  }\n  \n  .title{\n    grid-column-start: 1;\n    grid-column-end: 3;\n    text-align: center;\n  }\n\n  .name{\n    min-height: 40px;\n    font-size: 30px;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n\n\t.team1, .team2 {\n\t\tgrid-column-start: 0;\n\t\twidth: 100%;\n\t\ttext-align: center;\n    grid-row-start: 2;\n\n    .score{\n      font-weight: bold;\n      font-family: sans-serif;\n      font-size: 100px;\n      margin-top: 10px;\n      margin-bottom: 30px;\n    }\n\t\t.scoreButtons {\n      width: 100%;\n      display: grid;\n      grid-template-columns: repeat(5, 19.5%);\n      grid-template-rows: repeat(3, 80px);\n      grid-gap: 3px;\n      margin-bottom: 40px;\n\n      .Team1Score, .Team2Score{\n        padding: 0;\n        grid-column-start: 2;\n        grid-column-end: 5;\n        font-size: 36px;\n      }\n\t\t}\n\t}\n`;\n\nconst RemoveScore = styled.div`\n  text-align: center;\n  font-family: sans-serif;\n  font-weight: bold;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: background-repeat(3,100px);\n  \n  h3{\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n  button{\n    width: 120px;\n    height: 40px;\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n  .scoreDeduction{\n    width: 60px;\n    height: 40px;\n  }\n\n  .teamSelected{\n    background-color: #2c3965;\n    color: white;\n  }\n`;\n\nconst ResetButton = styled.button`\n  font-family: sans-serif;\n  height: 40px;\n  width: 120px;\n  display: block;\n  margin: 0 auto;\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nconst Stats = styled.div`\n  margin-top: 20px; \n  font-family: sans-serif;\n\n  \n`;\n\nconst PlayerStats = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  text-align: center;\n\n  @media(max-width: 450px){\n    grid-template-columns: 100%;\n  }\n`;\n\nconst Head2Head = styled.div`\n  text-align: center;\n`;\n\nconst TeamOne = 'TeamOneScore';\nconst TeamTwo = 'TeamTwoScore';\n\nfunction ScoreAnimate(TEAM) {\n  document.getElementById(TEAM).classList.add('bucket');\n  setTimeout(() => {\n    document.getElementById(TEAM).classList.remove('bucket');\n  }, 1500);\n}\n// THIS IS STATE!!!!\nclass TeamBoard extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      PLAYERS: '2v2',\n\n      P1NAME: 'Team 1',\n      T1Player1: 'Player 1',\n      T1Player2: 'Player 2',\n      T1Player3: 'Player 3',\n      T1Player4: 'Player 4',\n      T1Player5: 'Player 5',\n\n      P2NAME: 'Team 2',\n      T2Player1: 'Player 1',\n      T2Player2: 'Player 2',\n      T2Player3: 'Player 3',\n      T2Player4: 'Player 4',\n      T2Player5: 'Player 5',\n\n      P1SCORE: 0,\n      P2SCORE: 0,\n\n      P1BOX3: 0,\n      P1BOX2: 0,\n      P1BOX1: 0,\n\n      T1P1BOX3: 0,\n      T1P1BOX2: 0,\n      T1P1BOX1: 0,\n\n      T1P2BOX3: 0,\n      T1P2BOX2: 0,\n      T1P2BOX1: 0,\n\n      T1P3BOX3: 0,\n      T1P3BOX2: 0,\n      T1P3BOX1: 0,\n\n      T1P4BOX3: 0,\n      T1P4BOX2: 0,\n      T1P4BOX1: 0,\n\n      T1P5BOX3: 0,\n      T1P5BOX2: 0,\n      T1P5BOX1: 0,\n\n      P2BOX3: 0,\n      P2BOX2: 0,\n      P2BOX1: 0,\n\n      T2P1BOX3: 0,\n      T2P1BOX2: 0,\n      T2P1BOX1: 0,\n\n      T2P2BOX3: 0,\n      T2P2BOX2: 0,\n      T2P2BOX1: 0,\n\n      T2P3BOX3: 0,\n      T2P3BOX2: 0,\n      T2P3BOX1: 0,\n\n      T2P4BOX3: 0,\n      T2P4BOX2: 0,\n      T2P4BOX1: 0,\n\n      T2P5BOX3: 0,\n      T2P5BOX2: 0,\n      T2P5BOX1: 0,\n\n      MODE: 'edit',\n      INPUT1: '',\n      INPUT2: '',\n      TEAMSELECT: 'Team1',\n      \n    }\n  } \n  // THIS IS STATE!!!\n  \n  TeamOne3 = () => {\n    this.setState({ P1SCORE: this.state.P1SCORE + 3 });\n    this.setState({ P1BOX3: this.state.P1BOX3 + 3 });\n    ScoreAnimate(TeamOne);\n  }\n  TeamOneDeduct3 = () => {\n    this.setState({ P1SCORE: this.state.P1SCORE - 3 });\n    this.setState({ P1BOX3: this.state.P1BOX3 - 3 });\n  }\n  TeamOne2 = () => {\n    this.setState({ P1SCORE: this.state.P1SCORE + 2 });\n    this.setState({ P1BOX2: this.state.P1BOX2 + 2 });\n    ScoreAnimate(TeamOne);\n  }\n  TeamOneDeduct2 = () => {\n    this.setState({ P1SCORE: this.state.P1SCORE - 2 });\n    this.setState({ P1BOX2: this.state.P1BOX2 -2 });\n  }\n  TeamOne1 = () => {\n    this.setState({ P1SCORE: this.state.P1SCORE + 1 });\n    this.setState({ P1BOX1: this.state.P1BOX1 + 1 });\n    ScoreAnimate(TeamOne);\n  }\n  TeamOneDeduct1 = () => {\n    this.setState({ P1SCORE: this.state.P1SCORE - 1 });\n    this.setState({ P1BOX1: this.state.P1BOX1 - 1 });\n  }\n  TeamTwo3 = () => {\n    this.setState({ P2SCORE: this.state.P2SCORE + 3 });\n    this.setState({ P2BOX3: this.state.P2BOX3 + 3});\n    ScoreAnimate(TeamTwo);\n  }\n  TeamTwoDeduct3 = () => {\n    this.setState({ P2SCORE: this.state.P2SCORE - 3 });\n    this.setState({ P2BOX3: this.state.P2BOX3 - 3 });\n  }\n  TeamTwo2 = () => {\n    this.setState({ P2SCORE: this.state.P2SCORE + 2 });\n    this.setState({ P2BOX2: this.state.P2BOX2 + 2 });\n    ScoreAnimate(TeamTwo);\n  }\n  TeamTwoDeduct2 = () => {\n    this.setState({ P2SCORE: this.state.P2SCORE - 2 });\n    this.setState({ P2BOX2: this.state.P2BOX2 - 2 });\n  }\n  TeamTwo1 = () => {\n    this.setState({ P2SCORE: this.state.P2SCORE + 1 });\n    this.setState({ P2BOX1: this.state.P2BOX1 + 1 });\n    ScoreAnimate(TeamTwo);\n  }\n  TeamTwoDeduct1 = () => {\n    this.setState({ P2SCORE: this.state.P2SCORE - 1 });\n    this.setState({ P2BOX1: this.state.P2BOX1 - 1 });\n  }\n\n  Reset = () => {\n    this.setState({\n      P1NAME: 'Team 1',\n      T1Player1: 'Player 1',\n      T1Player2: 'Player 2',\n      T1Player3: 'Player 3',\n      T1Player4: 'Player 4',\n      T1Player5: 'Player 5',\n      P2NAME: 'Team 2',\n\n      T2Player1: 'Player 1',\n      T2Player2: 'Player 2',\n      T2Player3: 'Player 3',\n      T2Player4: 'Player 4',\n      T2Player5: 'Player 5',\n\n      P1SCORE: 0,\n      P2SCORE: 0,\n\n      P1BOX3: 0,\n      P1BOX2: 0,\n      P1BOX1: 0,\n\n      T1P1BOX3: 0,\n      T1P1BOX2: 0,\n      T1P1BOX1: 0,\n\n      T1P2BOX3: 0,\n      T1P2BOX2: 0,\n      T1P2BOX1: 0,\n\n      T1P3BOX3: 0,\n      T1P3BOX2: 0,\n      T1P3BOX1: 0,\n\n      T1P4BOX3: 0,\n      T1P4BOX2: 0,\n      T1P4BOX1: 0,\n\n      T1P5BOX3: 0,\n      T1P5BOX2: 0,\n      T1P5BOX1: 0,\n\n      P2BOX3: 0,\n      P2BOX2: 0,\n      P2BOX1: 0,\n      T2P1BOX3: 0,\n      T2P1BOX2: 0,\n      T2P1BOX1: 0,\n      T2P2BOX3: 0,\n      T2P2BOX2: 0,\n      T2P2BOX1: 0,\n      T2P3BOX3: 0,\n      T2P3BOX2: 0,\n      T2P3BOX1: 0,\n      T2P4BOX3: 0,\n      T2P4BOX2: 0,\n      T2P4BOX1: 0,\n      T2P5BOX3: 0,\n      T2P5BOX2: 0,\n      T2P5BOX1: 0,\n    })\n  }\n\n  P1Name = (e) => {\n    this.setState({P1NAME: e.target.value});\n  }\n  P2Name = (e) => {\n    this.setState({P2NAME: e.target.value});\n  }\n\n  Players = (e) => {\n    let players = e.target.value;\n    this.setState({\n      PLAYERS: players\n    })\n  }\n\n  handleSave = () => {\n    if(this.state.INPUT1 === ''){\n      this.setState({ INPUT1: 'Player 1', MODE: 'view'});\n    } else{\n      this.setState({ P1NAME: this.state.INPUT1, P2NAME: this.state.INPUT2, MODE: 'view'});\n    }\n  }\n  handleEdit= () => {\n    this.setState({ MODE: 'edit'});\n  }\n\n\n  renderInputField() {\n    if(this.state.MODE === 'view') {\n      return <div className=\"viewMode\"></div>;\n    } else {\n      return(\n        <div className=\"editMode\">\n          <select name=\"Teams\" id=\"Teams\" onChange={(e) => this.Players(e)}>\n            <option value=\"2v2\">2 - 2</option>\n            <option value=\"3v3\">3 - 3</option>\n            <option value=\"4v4\">4 - 4</option>\n            <option value=\"5v5\">5 - 5</option>\n          </select>\n        if(this.state.PLAYERS === '2v2') {\n\n        <TeamGroup>\n          <div className=\"Team1\">\n            <h3 className=\"team\">\n              Team 1\n            </h3>\n              <div className=\"PlayersList\">\n                <h3>Player 1: </h3>\n                <input \n                  onChange={this.P1Name}\n                  value={this.T1Player1}\n                  placeholder={this.T1Player1}\n                />\n                <h3>Player 2: </h3>\n                <input \n                  onChange={this.P1Name}\n                  value={this.T1Player2}\n                  placeholder={this.T1Player2}\n                />\n              </div>\n          </div>\n          <div className=\"Team2\">\n            <h3>\n              Team 2\n            </h3>\n              <div className=\"PlayersList\">\n                <h3>Player 1: </h3>\n                <input\n                  onChange={this.P2Name}\n                  value={this.T2Player1}\n                  placeholder={this.T2Player1}\n                />\n                <h3>Player 1: </h3>\n                <input\n                  onChange={this.P2Name}\n                  value={this.T2Player2}\n                  placeholder={this.T2Player1}\n                />\n              </div>\n          </div>\n        </TeamGroup>\n        }\n        {this.renderButton()}\n        </div>\n      );\n    }\n  }\n\n  renderButton(){\n    if (this.state.MODE === 'view') {\n      return (\n        <button onClick={this.handleEdit}>\n          Edit Player Names\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.handleSave}>\n          Save Player Names\n        </button>\n      );\n    }\n  }\n\n  teamSelect1 = () => {\n    this.setState({ TEAMSELECT: 'Team1'})\n  }\n  teamSelect2 = () => {\n    this.setState({ TEAMSELECT: 'Team2'})\n  }\n\n  renderTeam(){\n    if(this.state.TEAMSELECT === 'Team1') {\n      return(\n        <div className=\"deduction\">\n          <h3>Deduct from: {this.state.P1NAME}</h3>\n          <button class=\"teamSelected\" onClick={this.teamSelect1}>{this.state.P1NAME}</button>\n          <button onClick={this.teamSelect2}>{this.state.P2NAME}</button>\n\n          <div className=\"deductBtn\">\n            <button className=\"scoreDeduction\" onClick={this.TeamOneDeduct3} >3</button>\n            <button className=\"scoreDeduction\" onClick={this.TeamOneDeduct2} >2</button>\n            <button className=\"scoreDeduction\" onClick={this.TeamOneDeduct1} >1</button>\n          </div>\n        </div>\n      );\n    } else {\n      return(\n        <div className=\"deduction\">\n          <h3>Deduct from: {this.state.P2NAME}</h3>\n          <button onClick={this.teamSelect1}>{this.state.P1NAME}</button>\n          <button class=\"teamSelected\" onClick={this.teamSelect2}>{this.state.P2NAME}</button>\n\n          <div className=\"deductBtn\">\n            <button className=\"scoreDeduction\" onClick={this.TeamTwoDeduct3} >3</button>\n            <button className=\"scoreDeduction\" onClick={this.TeamTwoDeduct2} >2</button>\n            <button className=\"scoreDeduction\" onClick={this.TeamTwoDeduct1} >1</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n      <ScoreBoardAnimate> \n        <ScoreBoard>\n          <div className=\"Players\">\n            <div className=\"Player1\">\n              {this.renderInputField()}\n            </div>\n              {this.renderButton()}\n          </div>\n\n          <div className=\"team1\">\n            <h3 className=\"name\">{this.state.P1NAME}</h3>\n              <ScoreBoardAnimate className=\"score\" id=\"TeamOneScore\"> {this.state.P1SCORE} </ScoreBoardAnimate>\n\n            <div className=\"scoreButtons\">\n              <button className=\"Team1Score\" type=\"button\" onClick={this.TeamOne3}>3</button>\n              <button className=\"Team1Score\" type=\"button\" onClick={this.TeamOne2}>2</button>\n              <button className=\"Team1Score\" type=\"button\" onClick={this.TeamOne1}>1</button>\n            </div>\n          </div>\n\n          <div className=\"team2\">\n            <h3 className=\"name\">{this.state.P2NAME}</h3>\n              <ScoreBoardAnimate className=\"score\" id=\"TeamTwoScore\"> {this.state.P2SCORE} </ScoreBoardAnimate>\n\n            <div className=\"scoreButtons\">\n              <button className=\"Team2Score\" type=\"button\" onClick={this.TeamTwo3}>3</button>\n              <button className=\"Team2Score\" type=\"button\" onClick={this.TeamTwo2}>2</button>\n              <button className=\"Team2Score\" type=\"button\" onClick={this.TeamTwo1}>1</button>\n            </div>\n          </div>\n\n        </ScoreBoard>\n      </ScoreBoardAnimate>\n\n      <RemoveScore>\n          {this.renderTeam()}\n      </RemoveScore>\n\n      <Stats>\n        <PlayerStats>\n          <div className=\"P1Stats\">\n            <h2>{this.state.P1NAME}'s Point Breakdown</h2>\n              <h2>3's: { parseInt(Math.round((this.state.P1BOX3 / this.state.P1SCORE ) * 100 )) || 0 }%</h2>\n              <h2>2's: { parseInt(Math.round((this.state.P1BOX2 / this.state.P1SCORE) * 100)) || 0 }%</h2>\n              <h2>1's: { parseInt(Math.round((this.state.P1BOX1 / this.state.P1SCORE) * 100)) || 0 }%</h2>\n          </div>\n          <div className=\"P2Stats\">\n            <h2>{this.state.P2NAME}'s Point Breakdown</h2>\n              <h2>3's: { parseInt(Math.round((this.state.P2BOX3 / this.state.P2SCORE) * 100)) || 0 }%</h2>\n              <h2>2's: { parseInt(Math.round((this.state.P2BOX2 / this.state.P2SCORE) * 100)) || 0 }%</h2>\n              <h2>1's: { parseInt(Math.round((this.state.P2BOX1 / this.state.P2SCORE) * 100)) || 0 }%</h2>\n          </div>\n        </PlayerStats>\n        <Head2Head>\n          <h2>{this.state.P1NAME} VS {this.state.P2NAME}</h2>\n          <h3>3's: {this.state.P1BOX3 / 3} : {this.state.P2BOX3 / 3}</h3>\n          <h3>2's: {this.state.P1BOX2 / 2} : {this.state.P2BOX2 / 2}</h3>\n          <h3>1's: {this.state.P1BOX1} : {this.state.P2BOX1}</h3>\n        </Head2Head>\n\n\n      </Stats>\n        <ResetButton type=\"button\" onClick={this.Reset}>Reset</ResetButton>\n      </>\n    );\n  }\n}\n\nexport default TeamBoard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AA6FA;AA6BA;AAUA;AAOA;AAUA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgFA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AApFA;AAqFA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxFA;AAyFA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA7FA;AA8FA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjGA;AAkGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAtGA;AAuGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1GA;AA2GA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA/GA;AAgHA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAnHA;AAoHA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAxHA;AAyHA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5HA;AA6HA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAjIA;AAkIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArIA;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;AA6DA;AACA;AArMA;AAuMA;AAAA;AAAA;AACA;AACA;AAzMA;AA0MA;AAAA;AAAA;AACA;AACA;AA5MA;AA8MA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAnNA;AAqNA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA3NA;AA4NA;AAAA;AAAA;AACA;AACA;AA9NA;AA8SA;AAAA;AAAA;AACA;AACA;AAhTA;AAiTA;AAAA;AAAA;AACA;AACA;AAjTA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAvEA;AAFA;AA4EA;AACA;AACA;;;AAkzZA;AACA;AA2ZA;;;;A","sourceRoot":""}